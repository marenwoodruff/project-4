<%= render partial: 'layouts/navbar' %>

<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>


<div>
  <p id="demo">Click the button to get your coordinates:</p>
  <button class="button small" onclick="getLocation()">Locate Me</button>
</div>
  <script>
    var x=document.getElementById("demo");
    function getLocation()
    {
      if (navigator.geolocation)
        {
        navigator.geolocation.getCurrentPosition(showPosition);
        }
      else{x.innerHTML="Geolocation is not supported by this browser.";}
    }
    function showPosition(position)
    {
      search_lat = position.coords.latitude
      search_lng = position.coords.longitude
      x.innerHTML="Latitude: " + search_lat +
      "<br>Longitude: " + search_lng; 
    }

</script>

<br />


<u><%= link_to 'Add a New Coffeeshop', new_coffeeshop_path %></u>

<div class="medium-6" id="map-div">
  <h1>Coffee Shops</h1>
  <%= form_tag coffeeshops_path, :method => :get do %>
    <p>
      <%= text_field_tag :search, params[:search], :placeholder => "Enter your location" %>
      <%= @city %>
      <%= submit_tag "Search Near", :name => nil %>
    </p>
  <% end %>
    <!-- The "canvas," where our map is rendered -->
  <div id="map-canvas"></div>
</div>

<!-- Our gmaps4rails handler scripts -->
<script type="text/javascript">
handler = Gmaps.build('Google');
  // provider is where we pass in mapOptions like zoom, and our API key (not required)
  // internal is where we tell the map where to render and set options like   markers, bounds, etc.

  handler.buildMap({ provider: {zoom: 16, provider_key: "AIzaSyCYWhL3gSXTWROdo8CQMOiFyd6YNGzB918"}, internal: {id: 'map-canvas'}}, function(){
    <% @coffeeshops.each do |coffeeshop| %>
    markers = handler.addMarkers([
      {
        lat: <%=coffeeshop.latitude%>, // pulls in the latitude for the marker via ERB
        lng: <%=coffeeshop.longitude%>, // pulls in the longitude for the marker via ERB
        infowindow: '<%= link_to "#{coffeeshop.name}", coffeeshop_path(coffeeshop) %>' // info window text (this is optional)
      }
    ]);
    <% end %>
    handler.map.centerOn(markers[0]); // centers on the first marker in the array
  });

    

</script>

